// "BatchProcessFolders"
//
// This macro batch processes all the files in a folder and any
// subfolders in that folder. In this example, it runs the Subtract
// Background command of TIFF files. For other kinds of processing,
// edit the processFile() function at the end of this macro.

   requires("1.33s");
   dir = "/home/comp/e5251691/Desktop/training(public)/";
   setBatchMode(true);
   count = 0;
   countFiles(dir);
   n = 0;

   setBatchMode(false);
   processFiles(dir);
   print(count+" files processed");

   function countFiles(dir) {
      list = getFileList(dir);
      for (i=0; i<list.length; i++) {
          if (endsWith(list[i], "/"))
              countFiles(""+dir+list[i]);
          else
              count++;
      }
  }

   function processFiles(dir) {
      list = getFileList(dir);
      for (i=0; i<list.length; i++) {
          if (endsWith(list[i], "/"))
              processFiles(""+dir+list[i]);
          else {
             showProgress(n++, count);
             path = dir+"/"+list[i];
             print(path);
             processFile(path, list[i]);
          }
      }
  }

  function processFile(path, filename) {
       if (endsWith(path, ".png")) {
       open(path);
       rename("000.png");
       setBatchMode(true);
       run("Color Threshold...");
       // Color Thresholder 1.51s
       // Autogenerated macro, single images only!
       min=newArray(3);
       max=newArray(3);
       filter=newArray(3);
       a=getTitle();
       run("HSB Stack");
       run("Convert Stack to Images");
       selectWindow("Hue");
       rename("0");
       selectWindow("Saturation");
       rename("1");
       selectWindow("Brightness");
       rename("2");
       min[0]=0;
       max[0]=255;
       filter[0]="pass";
       min[1]=29;
       max[1]=255;
       filter[1]="pass";
       min[2]=0;
       max[2]=255;
       filter[2]="pass";
       for (i=0;i<3;i++){
         selectWindow(""+i);
         setThreshold(min[i], max[i]);
         run("Convert to Mask");
         if (filter[i]=="stop")  run("Invert");
       }
       imageCalculator("AND create", "0","1");
       imageCalculator("AND create", "Result of 0","2");
       for (i=0;i<3;i++){
         selectWindow(""+i);
         close();
       }
       selectWindow("Result of 0");
       close();
       selectWindow("Result of Result of 0");
       rename(a);
       // Colour Thresholding-------------
       setBatchMode(false);

       run("Duplicate...", " ");
       selectWindow("000.png");
       //setThreshold(255, 255);
       setOption("BlackBackground", false);
       run("Make Binary");
       selectWindow("000-1.png");
       run("Make Binary");
       run("Fill Holes");

       run("Analyze Particles...", "size=10000-Infinity show=Outlines display exclude clear summarize");
       saveAs("Results", "./Results/"+filename+"-TotalSize.csv");
       selectWindow("000.png");
       //run("Remove Outliers...", "radius=15 threshold=50 which=Bright");
       selectWindow("000-1.png");
       imageCalculator("Subtract create", "000-1.png","000.png");
       selectWindow("Result of 000-1.png");

       run("Set Measurements...", "area mean min centroid add redirect=None decimal=3");
       run("Analyze Particles...", "size=100-10000 circularity=0.50-1.00 show=Outlines display exclude clear summarize");
       //selectWindow("Results");
       //saveAs("Results", "./Results/"+filename+"-Results.csv");


       selectWindow("Summary");
       saveAs("Results", "./Results/"+filename+"-Summary.csv");
       //close();

       selectWindow("Result of 000-1.png");
       //run("Save", "save=[./Results/"+filename+"-Result of 000-1.tif]");
       close();

       selectWindow("Drawing of Result of 000-1.png");
       //run("Save", "save=[./Results/"+filename+"-Drawing of Result of 000-1.tif]");
       close();

       selectWindow("000-1.png");
       //run("Save", "save=[./Results/"+filename+"-000-1.tif]");
       close();


       selectWindow("000.png");
       //run("Save", "save=[./Results/"+filename+"-000.tif]");
       close();

       selectWindow("Drawing of 000-1.png");
       close();

       //run("Collect Garbage");
       call("java.lang.System.gc");
       wait(1000);
       call("java.lang.System.gc");
      }
  }
